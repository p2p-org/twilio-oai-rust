/*
 * Twilio - Verify
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.30.0
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct VerifyV2VerificationAttempt {
    /// The SID of the Account that created the verification.
    #[serde(rename = "account_sid", skip_serializing_if = "Option::is_none")]
    pub account_sid: Option<String>,
    /// Communication channel used for the attempt.
    #[serde(rename = "channel", skip_serializing_if = "Option::is_none")]
    pub channel: Option<Channel>,
    /// An object containing the channel specific information for an attempt.
    #[serde(rename = "channel_data", skip_serializing_if = "Option::is_none")]
    pub channel_data: Option<serde_json::Value>,
    /// Status of the conversion for the verification.
    #[serde(rename = "conversion_status", skip_serializing_if = "Option::is_none")]
    pub conversion_status: Option<ConversionStatus>,
    /// The date this Attempt was created
    #[serde(rename = "date_created", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// The date this Attempt was updated
    #[serde(rename = "date_updated", skip_serializing_if = "Option::is_none")]
    pub date_updated: Option<String>,
    /// An object containing the charge for this verification attempt.
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<serde_json::Value>,
    /// The SID of the verify service that generated this attempt.
    #[serde(rename = "service_sid", skip_serializing_if = "Option::is_none")]
    pub service_sid: Option<String>,
    /// The SID that uniquely identifies the verification attempt.
    #[serde(rename = "sid", skip_serializing_if = "Option::is_none")]
    pub sid: Option<String>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// The SID of the verification that generated this attempt.
    #[serde(rename = "verification_sid", skip_serializing_if = "Option::is_none")]
    pub verification_sid: Option<String>,
}

impl VerifyV2VerificationAttempt {
    pub fn new() -> VerifyV2VerificationAttempt {
        VerifyV2VerificationAttempt {
            account_sid: None,
            channel: None,
            channel_data: None,
            conversion_status: None,
            date_created: None,
            date_updated: None,
            price: None,
            service_sid: None,
            sid: None,
            url: None,
            verification_sid: None,
        }
    }
}

/// Communication channel used for the attempt.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Channel {
    #[serde(rename = "sms")]
    Sms,
    #[serde(rename = "call")]
    Call,
    #[serde(rename = "email")]
    Email,
    #[serde(rename = "whatsapp")]
    Whatsapp,
}

impl Default for Channel {
    fn default() -> Channel {
        Self::Sms
    }
}
/// Status of the conversion for the verification.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ConversionStatus {
    #[serde(rename = "converted")]
    Converted,
    #[serde(rename = "unconverted")]
    Unconverted,
}

impl Default for ConversionStatus {
    fn default() -> ConversionStatus {
        Self::Converted
    }
}
